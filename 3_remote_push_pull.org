#+TITLE: Git Workshop
#+SUBTITLE: remote, push, pull
#+DATE: 2016/06/20（日）20:20
#+AUTHOR: Jian Min Huang
#+EMAIL: hello@world
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:nil p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.4.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export

* Goal

+ Use git to collaborate with remotes/others

* OutLine

- git clone
- git remote
- git pull
- git push

* clone

#+BEGIN_EXAMPLE
git clone <path/to/git/reop>
#+END_EXAMPLE
  
* remote

** remote status

#+BEGIN_SRC sh
git remote
git remote -v
#+END_SRC

origin is the default remote when you clone a git repository.

Detail remote information

#+BEGIN_EXAMPLE
git remote show <remote_name>
#+END_EXAMPLE

#+BEGIN_EXAMPLE
git remote show origin
#+END_EXAMPLE

** update remote

Update remote's history

#+BEGIN_SRC sh
git remote update
#+END_SRC

** add remote

#+BEGIN_EXAMPLE
git remote add <alias> <path/to/git/repo>
#+END_EXAMPLE   

#+BEGIN_EXAMPLE
git remote add ue viewuser99@rdlinux:/home/viewuser99/ue.git
#+END_EXAMPLE


* diff remote

Compare local branch with remote branch

#+BEGIN_SRC sh
# What will be pushed to remote repo
git diff <remote>/<remote branch> <local branch>
#+END_SRC

#+BEGIN_SRC sh
# what is going to be added when pull
git diff <local branch> <remote>/<remote branch>
#+END_SRC

* pull

 #+BEGIN_SRC sh
git remote update

git pull
 #+END_SRC 

More specifically

#+BEGIN_SRC sh
# git pull <remote> <barnch>
git pull origin master
#+END_SRC

* push

#+BEGIN_SRC sh
git push
#+END_SRC

More specifically

#+BEGIN_SRC sh
# git push origin master
git push origin master
#+END_SRC


* Tracking Branches

Show tracking branches

#+BEGIN_SRC sh
git branch -vv
#+END_SRC

Tracking branch is
a branch which knows which remote branch it is related to.

You can use
git push or
git pull without specifying remote or branch
for trakcing branch.

** Remove tracking relation

Remove a current tracking relationship

#+BEGIN_SRC sh
git branch --unset-upstream
#+END_SRC

** Link a branch to an remote branch

*** Pushing a branch

Pushing a branch (even if it exists in both places)
to a remote location and creating the link

#+BEGIN_SRC sh
$ git push -u origin feature
#+END_SRC

*** Creating a local version of an existing remote branch

#+BEGIN_EXAMPLE
$ git fetch origin
remote: Counting objects: 10, done.
...
 * [new branch]      feature    -> origin/feature

$ git checkout feature
#+END_EXAMPLE

Longer version

#+BEGIN_SRC sh
git branch --track feature origin/feature
git checkout feature
#+END_SRC

There is an --no-track option for not tracking remote branch.

#+BEGIN_SRC sh
git branch --no-track feature origin/feature
#+END_SRC
